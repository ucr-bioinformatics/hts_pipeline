#!/usr/bin/env Rscript

### Generate renamed sym-links for FASTQ files
## Jordan Hayes
## 2/3/2014

# Get script arguments
#args <- c('219','2','SampleSheet.csv','.')
args <- commandArgs(trailingOnly = TRUE)
if (length(args) < 4) {
    stop("USAGE:: script.R <FlowcellID> <NumberOfFiles> <SampleSheet> <UnalignedPath>")
}

# Get flowcell name
flowcellid <- args[1]
flowcell <- paste("flowcell",flowcellid,sep="")

# Get number of pairs
pairs <- c()
for (i in 1:args[2]){
    pairs <- c(pairs,i)
}

# Get SampleSheet
if (file.exists(args[3])){
    samples <- read.csv(args[3])
} else{
    stop(paste("SampleSheet ", args[3]," does not exist."))
}

# Make sure FASTQ path exists
if (file.exists(args[4])){
    unaligned_path <- args[4]
} else{
    stop(paste("Unaligned path ", args[4]," does not exist."))
}

# Trim off leading and trailing whitespace
trim <- function (x) gsub("^\\s+|\\s+$", "", x)

# Define function to be applied to each row
gen_link <- function(x) {
        project_id <-  trim(x[10])
        sample_id <- trim(x[3])
        lane <- trim(x[2])
        index <- trim(x[5])

        # Find files based on file name pattern
        #file_name <- paste(sample,"_.*_L00",lane[i],"_R", p, ".*fastq.gz$", sep="")
        fastq_path <- paste(unaligned_path,'/Project_',project_id,'/Sample_',sample_id,'/',sep="")
        file_name <- paste(sample_id,"_",index,"_L00",lane,"_R", p, ".*fastq.gz$", sep="")
        files <- list.files(path=fastq_path,pattern=file_name)
        #print( paste0(fastq_path,file_name) )

        # If we found some files, create symlinks
        if (length(files) > 0){
            if (!is.na(index)){
                commands <- paste("ln -s ",fastq_path,'/',files, "  ", flowcell, "_lane",lane[i],"_pair",p,"_",index,".fastq.gz",sep="")
            }else{
                commands <- paste("ln -s ",fastq_path,'/',files, "  ", flowcell, "_lane",lane[i],"_pair",p,".fastq.gz",sep="")
            }
            print(commands)
            system(commands)
        } else{
           warning(paste("WARNING:: No files matching pattern ",file_name))
        }
}

# For each pair generate sym links for each row
for (p in pairs){
    apply(samples, 1, gen_link)
}

# Print first warnings
warn <- warnings()
if (length(warn) > 0){
    print(warn)
}

# Create QC sym-link
qcs <- list.files(path=unaligned_path, pattern='^qc[0-9]*$')
if (length(qcs) > 1) {
    last_qc <- qcs[-1]
    next_qc <- paste('qc', is.numeric(gsub("^qc", '',last_qc))+1, sep="")
}
else {
    next_qc <- 'qc'
}

system(paste('ln -s ', unaligned_path, '/Basecall_Stats_* ', next_qc, sep=""))

